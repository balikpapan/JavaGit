/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package latihan11;


import javax.swing.JTable;

import java.sql.Connection;

import java.sql.DriverManager;

import java.sql.ResultSet;

import java.sql.ResultSetMetaData;

import java.sql.SQLException;

import java.sql.Statement;

import java.util.logging.Logger;

import java.util.logging.Level;

import javax.swing.table.DefaultTableModel;

import java.text.DateFormat;

import java.text.SimpleDateFormat;

import java.util.Calendar;

import java.util.Date;

import java.sql.*;

import java.util.Vector;

import java.util.*;




/**
 *
 * @author steven
 */
public class FrameInputData4 extends javax.swing.JFrame {

    /**
     * Creates new form FrameInputData4
     */
    public FrameInputData4() {
        initComponents();
        
        
        
         jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
              //  {null, null, null, null},
              //  {null, null, null, null},
              //  {null, null, null, null},
              //  {null, null, null, null}
            },
            new String [] {
              //  "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        
        
        
        Connection koneksi = null;
        
        Statement stmt = null;
        
        
        
        
        // Date tanggalMulai1 = null;
        
        // Date tanggalBerakhir1 = null;
        
        String query = "SELECT idpengguna,namalengkap,namapengguna,katakunci,tanggalmulai,tanggalberakhir FROM pengguna";
        
        
        try {
            
            
            String url = "jdbc:postgresql://localhost:5432/pdam";
            
            String user = "steven";
            
            String password = "kucing";
            
            koneksi = DriverManager.getConnection(url,user,password);
            
            
            if (koneksi != null);
            
            
            stmt = koneksi.createStatement();
            
            ResultSet rs = stmt.executeQuery(query);
            
            ResultSetMetaData rsmd = rs.getMetaData();
            
            int numberOfColumns = rsmd.getColumnCount();
            
            
            
            while (rs.next()){
                
                
                int idPengguna1 = rs.getInt("idpengguna");
                
                
                String namaLengkap1 = rs.getString("namalengkap");
                
                String namaPengguna1 = rs.getString("namapengguna");
                
                String kataKunci1 = rs.getString("katakunci");
                
                
                
                
                Date tanggalMulai1 = rs.getDate("tanggalmulai");
               
                       
                Date tanggalBerakhir1 = rs.getDate("tanggalberakhir");
              
          
                String idPengguna3 = rsmd.getColumnLabel(1);
                
                String namaLengkap3 = rsmd.getColumnLabel(2);
                
                String namaPengguna3 = rsmd.getColumnLabel(3);
                
                String kataKunci3 = rsmd.getColumnLabel(4);
                
                String tanggalMulai3 = rsmd.getColumnLabel(5);
                
                String tanggalBerakhir3 = rsmd.getColumnLabel(6);
                
                
                DefaultTableModel tm = (DefaultTableModel)jTable1.getModel();
                
                
                tm.setColumnIdentifiers(new Object [] {(idPengguna3),(namaLengkap3),(namaPengguna3),(kataKunci3),(tanggalMulai3),(tanggalBerakhir3)});
                
                tm.addRow(new Object [] {(idPengguna1),(namaLengkap1),(namaPengguna1),(kataKunci1),(tanggalMulai1),(tanggalBerakhir1)});
                
   
                
                
                koneksi.close();
                
                
                
                
            }
            
            
            
        } catch (SQLException ex) {
            
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameInputData4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameInputData4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameInputData4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameInputData4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameInputData4().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
